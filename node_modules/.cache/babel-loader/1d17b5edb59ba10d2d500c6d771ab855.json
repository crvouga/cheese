{"ast":null,"code":"var _jsxFileName = \"/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfileDisplayNameForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthUser, useProfile } from \"../data-access\";\nimport { useDebounce } from \"use-debounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProfileDisplayNameForm = () => {\n  _s();\n\n  const {\n    userId\n  } = useAuthUser();\n  const {\n    profile,\n    updateDisplayName\n  } = useProfile({\n    userId\n  });\n  const [displayName, setDisplayName] = useState();\n  const [debounced] = useDebounce(displayName, 1000);\n  const [state, setState] = useState(\"idle\");\n  useEffect(() => {\n    setState(\"loading\");\n    updateDisplayName({\n      displayName: debounced\n    }).finally(() => {\n      setState(\"idle\");\n    });\n  }, [updateDisplayName, debounced]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Display Name\",\n      sx: {\n        marginBottom: 2\n      },\n      defaultValue: profile === null || profile === void 0 ? void 0 : profile.displayName,\n      onChange: event => {\n        setDisplayName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileDisplayNameForm, \"T6gqnpWnoeiCa39WyplNMLVaoVw=\", false, function () {\n  return [useAuthUser, useProfile, useDebounce];\n});\n\n_c = ProfileDisplayNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDisplayNameForm\");","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfileDisplayNameForm.tsx"],"names":["TextField","React","useEffect","useState","useAuthUser","useProfile","useDebounce","ProfileDisplayNameForm","userId","profile","updateDisplayName","displayName","setDisplayName","debounced","state","setState","finally","marginBottom","event","target","value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAGA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,WAAW,EAA9B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAiCL,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAjD;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,SAAD,IAAcP,WAAW,CAACK,WAAD,EAAc,IAAd,CAA/B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAqB,MAArB,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAAC,SAAD,CAAR;AAEAL,IAAAA,iBAAiB,CAAC;AAAEC,MAAAA,WAAW,EAAEE;AAAf,KAAD,CAAjB,CAA8CG,OAA9C,CAAsD,MAAM;AAC1DD,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACL,iBAAD,EAAoBG,SAApB,CANM,CAAT;AAQA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,EAAE,EAAE;AAAEI,QAAAA,YAAY,EAAE;AAAhB,OAFN;AAGE,MAAA,YAAY,EAAER,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,WAHzB;AAIE,MAAA,QAAQ,EAAGO,KAAD,IAAW;AACnBN,QAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CA7BM;;GAAMb,sB;UACQH,W,EACoBC,U,EAGnBC,W;;;KALTC,sB","sourcesContent":["import { TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthUser, useProfile } from \"../data-access\";\nimport { useDebounce } from \"use-debounce\";\nimport { useMutation } from \"react-query\";\n\nexport const ProfileDisplayNameForm = () => {\n  const { userId } = useAuthUser();\n  const { profile, updateDisplayName } = useProfile({ userId });\n\n  const [displayName, setDisplayName] = useState<string | undefined>();\n  const [debounced] = useDebounce(displayName, 1000);\n\n  const [state, setState] = useState<\"idle\" | \"loading\">(\"idle\");\n\n  useEffect(() => {\n    setState(\"loading\");\n\n    updateDisplayName({ displayName: debounced }).finally(() => {\n      setState(\"idle\");\n    });\n  }, [updateDisplayName, debounced]);\n\n  return (\n    <>\n      <TextField\n        label=\"Display Name\"\n        sx={{ marginBottom: 2 }}\n        defaultValue={profile?.displayName}\n        onChange={(event) => {\n          setDisplayName(event.target.value);\n        }}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}