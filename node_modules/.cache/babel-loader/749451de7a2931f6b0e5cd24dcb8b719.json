{"ast":null,"code":"var _jsxFileName = \"/Users/christophervouga/Documents/projects/fake-id/src/pages/auth.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, AppBar, Toolbar, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { useAuth } from \"../data-access\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthPage = () => {\n  _s();\n\n  const {\n    signIn\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flex: 1\n          },\n          align: \"center\",\n          children: \"Fake ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          signIn({\n            authMethod: \"google\"\n          });\n        },\n        children: \"Continue With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuthPage, \"q0OieE1MSAP052b+f80umWpFpas=\", false, function () {\n  return [useAuth];\n});\n\n_c = AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/pages/auth.tsx"],"names":["Box","Button","AppBar","Toolbar","Typography","React","GoogleIcon","useAuth","AuthPage","signIn","flex","p","authMethod"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,UAAvC,QAAyD,eAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAaF,OAAO,EAA1B;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,EAAE,EAAE;AAAEG,YAAAA,IAAI,EAAE;AAAR,WAA7B;AAA0C,UAAA,KAAK,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADb;AAEE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,MAAM,CAAC;AAAEG,YAAAA,UAAU,EAAE;AAAd,WAAD,CAAN;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAqBD,CAvBM;;GAAMJ,Q;UACQD,O;;;KADRC,Q","sourcesContent":["import { Box, Button, AppBar, Toolbar, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { useAuth } from \"../data-access\";\n\nexport const AuthPage = () => {\n  const { signIn } = useAuth();\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flex: 1 }} align=\"center\">\n            Fake ID\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box sx={{ p: 2 }}>\n        <Button\n          startIcon={<GoogleIcon />}\n          onClick={() => {\n            signIn({ authMethod: \"google\" });\n          }}\n        >\n          Continue With Google\n        </Button>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}