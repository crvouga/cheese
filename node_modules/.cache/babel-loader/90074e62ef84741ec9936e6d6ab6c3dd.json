{"ast":null,"code":"import _slicedToArray from \"/Users/christophervouga/Documents/projects/fake-id/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function calculateRangeChange(_ref) {\n  var utils = _ref.utils,\n      range = _ref.range,\n      selectedDate = _ref.newDate,\n      currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd;\n\n  var _range = _slicedToArray(range, 2),\n      start = _range[0],\n      end = _range[1];\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  var _options$range = _slicedToArray(options.range, 2),\n      start = _options$range[0],\n      end = _options$range[1];\n\n  var _calculateRangeChange = calculateRangeChange(options),\n      newRange = _calculateRangeChange.newRange;\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  var _newRange = _slicedToArray(newRange, 2),\n      previewStart = _newRange[0],\n      previewEnd = _newRange[1];\n\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/node_modules/@mui/lab/DateRangePicker/date-range-manager.js"],"names":["calculateRangeChange","utils","range","selectedDate","newDate","currentlySelectingRangeEnd","start","end","Boolean","isAfter","nextSelection","newRange","isBefore","calculateRangePreview","options","previewStart","previewEnd"],"mappings":";AAAA,OAAO,SAASA,oBAAT,OAKJ;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFQC,YAER,QAFDC,OAEC;AAAA,MADDC,0BACC,QADDA,0BACC;;AACD,8BAAqBH,KAArB;AAAA,MAAOI,KAAP;AAAA,MAAcC,GAAd;;AAEA,MAAIF,0BAA0B,KAAK,OAAnC,EAA4C;AAC1C,WAAOG,OAAO,CAACD,GAAD,CAAP,IAAgBN,KAAK,CAACQ,OAAN,CAAcN,YAAd,EAA4BI,GAA5B,CAAhB,GAAmD;AACxDG,MAAAA,aAAa,EAAE,KADyC;AAExDC,MAAAA,QAAQ,EAAE,CAACR,YAAD,EAAe,IAAf;AAF8C,KAAnD,GAGH;AACFO,MAAAA,aAAa,EAAE,KADb;AAEFC,MAAAA,QAAQ,EAAE,CAACR,YAAD,EAAeI,GAAf;AAFR,KAHJ;AAOD;;AAED,SAAOC,OAAO,CAACF,KAAD,CAAP,IAAkBL,KAAK,CAACW,QAAN,CAAeT,YAAf,EAA6BG,KAA7B,CAAlB,GAAwD;AAC7DI,IAAAA,aAAa,EAAE,KAD8C;AAE7DC,IAAAA,QAAQ,EAAE,CAACR,YAAD,EAAe,IAAf;AAFmD,GAAxD,GAGH;AACFO,IAAAA,aAAa,EAAE,OADb;AAEFC,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQH,YAAR;AAFR,GAHJ;AAOD;AACD,OAAO,SAASU,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,MAAI,CAACA,OAAO,CAACV,OAAb,EAAsB;AACpB,WAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD;;AAED,sCAAqBU,OAAO,CAACZ,KAA7B;AAAA,MAAOI,KAAP;AAAA,MAAcC,GAAd;;AACA,8BAEIP,oBAAoB,CAACc,OAAD,CAFxB;AAAA,MACEH,QADF,yBACEA,QADF;;AAIA,MAAI,CAACL,KAAD,IAAU,CAACC,GAAf,EAAoB;AAClB,WAAOI,QAAP;AACD;;AAED,iCAAmCA,QAAnC;AAAA,MAAOI,YAAP;AAAA,MAAqBC,UAArB;;AACA,SAAOF,OAAO,CAACT,0BAAR,KAAuC,KAAvC,GAA+C,CAACE,GAAD,EAAMS,UAAN,CAA/C,GAAmE,CAACD,YAAD,EAAeT,KAAf,CAA1E;AACD","sourcesContent":["export function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd\n}) {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}"]},"metadata":{},"sourceType":"module"}