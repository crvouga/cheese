{"ast":null,"code":"var _jsxFileName = \"/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfileDisplayNameForm.tsx\",\n    _s = $RefreshSig$();\n\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Box, TextField } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProfileDisplayNameForm = ({\n  displayName,\n  onUpdate\n}) => {\n  _s();\n\n  const ref = useRef(null);\n  const [runningDisplayName, setRunningDisplayName] = useState(displayName);\n  const mutation = useMutation(() => {\n    var _ref$current$value, _ref$current;\n\n    const displayName = (_ref$current$value = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.value) !== null && _ref$current$value !== void 0 ? _ref$current$value : \"\";\n    return onUpdate({\n      displayName\n    });\n  });\n  useEffect(() => {\n    setRunningDisplayName(displayName);\n  }, [displayName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginBottom: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        inputRef: ref,\n        label: \"Display Name\",\n        sx: {\n          marginBottom: 2\n        },\n        defaultValue: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this),\n        loading: mutation.isLoading,\n        variant: \"outlined\",\n        fullWidth: false,\n        onClick: () => {\n          mutation.mutateAsync();\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileDisplayNameForm, \"BUdR1QTmX9ylHkPYDRUZ8EbCVVE=\", false, function () {\n  return [useMutation];\n});\n\n_c = ProfileDisplayNameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDisplayNameForm\");","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfileDisplayNameForm.tsx"],"names":["EditIcon","LoadingButton","Box","TextField","React","useEffect","useRef","useState","useMutation","ProfileDisplayNameForm","displayName","onUpdate","ref","runningDisplayName","setRunningDisplayName","mutation","current","value","marginBottom","display","flexDirection","alignItems","isLoading","mutateAsync"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,0BAArB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAAC;AACrCC,EAAAA,WADqC;AAErCC,EAAAA;AAFqC,CAAD,KAMhC;AAAA;;AACJ,QAAMC,GAAG,GAAGN,MAAM,CAA0B,IAA1B,CAAlB;AAEA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAACG,WAAD,CAA5D;AAEA,QAAMK,QAAQ,GAAGP,WAAW,CAAC,MAAM;AAAA;;AACjC,UAAME,WAAW,yCAAGE,GAAG,CAACI,OAAP,iDAAG,aAAaC,KAAhB,mEAAyB,EAA1C;AACA,WAAON,QAAQ,CAAC;AAAED,MAAAA;AAAF,KAAD,CAAf;AACD,GAH2B,CAA5B;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,qBAAqB,CAACJ,WAAD,CAArB;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFQ,QAAAA,YAAY,EAAE,CADZ;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,aAAa,EAAE,QAHb;AAIFC,QAAAA,UAAU,EAAE;AAJV,OADN;AAAA,8BAQE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAET,GADZ;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,EAAE,EAAE;AAAEM,UAAAA,YAAY,EAAE;AAAhB,SAHN;AAIE,QAAA,YAAY,EAAER;AAJhB;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,aAAD;AACE,QAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADb;AAEE,QAAA,OAAO,EAAEK,QAAQ,CAACO,SAFpB;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,QAAQ,CAACQ,WAAT;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+BD,CAnDM;;GAAMd,sB;UAWMD,W;;;KAXNC,sB","sourcesContent":["import EditIcon from \"@mui/icons-material/Edit\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Box, TextField } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useMutation } from \"react-query\";\n\nexport const ProfileDisplayNameForm = ({\n  displayName,\n  onUpdate,\n}: {\n  displayName?: string;\n  onUpdate: ({ displayName }: { displayName?: string }) => Promise<void>;\n}) => {\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const [runningDisplayName, setRunningDisplayName] = useState(displayName);\n\n  const mutation = useMutation(() => {\n    const displayName = ref.current?.value ?? \"\";\n    return onUpdate({ displayName });\n  });\n\n  useEffect(() => {\n    setRunningDisplayName(displayName);\n  }, [displayName]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginBottom: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <TextField\n          inputRef={ref}\n          label=\"Display Name\"\n          sx={{ marginBottom: 2 }}\n          defaultValue={displayName}\n        />\n\n        <LoadingButton\n          startIcon={<EditIcon />}\n          loading={mutation.isLoading}\n          variant=\"outlined\"\n          fullWidth={false}\n          onClick={() => {\n            mutation.mutateAsync();\n          }}\n        >\n          Update\n        </LoadingButton>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}