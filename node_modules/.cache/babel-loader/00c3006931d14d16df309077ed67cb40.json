{"ast":null,"code":"import _slicedToArray from\"/Users/christophervouga/Documents/projects/fake-id/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import EditIcon from\"@mui/icons-material/Edit\";import{LoadingButton}from\"@mui/lab\";import{Box,TextField}from\"@mui/material\";import React,{useEffect,useState}from\"react\";import{useMutation}from\"react-query\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ProfileDisplayNameForm=function ProfileDisplayNameForm(_ref){var displayName=_ref.displayName,onUpdate=_ref.onUpdate;var _useState=useState(displayName!==null&&displayName!==void 0?displayName:\"\"),_useState2=_slicedToArray(_useState,2),runningDisplayName=_useState2[0],setRunningDisplayName=_useState2[1];var mutation=useMutation(function(){return onUpdate({displayName:runningDisplayName});});useEffect(function(){setRunningDisplayName(displayName!==null&&displayName!==void 0?displayName:\"\");},[displayName]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{sx:{marginBottom:4,display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(TextField,{label:\"Display Name\",sx:{marginBottom:1},value:runningDisplayName,onChange:function onChange(event){setRunningDisplayName(event.target.value);}}),/*#__PURE__*/_jsx(LoadingButton,{startIcon:/*#__PURE__*/_jsx(EditIcon,{}),loading:mutation.isLoading,variant:\"outlined\",fullWidth:false,onClick:function onClick(){mutation.mutateAsync();},children:\"Update\"})]})});};","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfileDisplayNameForm.tsx"],"names":["EditIcon","LoadingButton","Box","TextField","React","useEffect","useState","useMutation","ProfileDisplayNameForm","displayName","onUpdate","runningDisplayName","setRunningDisplayName","mutation","marginBottom","display","flexDirection","alignItems","event","target","value","isLoading","mutateAsync"],"mappings":"yKAAA,MAAOA,CAAAA,QAAP,KAAqB,0BAArB,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,OAASC,GAAT,CAAcC,SAAd,KAA+B,eAA/B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,C,6IAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAMhC,IALJC,CAAAA,WAKI,MALJA,WAKI,CAJJC,QAII,MAJJA,QAII,CACJ,cAAoDJ,QAAQ,CAC1DG,WAD0D,SAC1DA,WAD0D,UAC1DA,WAD0D,CAC3C,EAD2C,CAA5D,wCAAOE,kBAAP,eAA2BC,qBAA3B,eAIA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,CAAC,UAAM,CACjC,MAAOG,CAAAA,QAAQ,CAAC,CAAED,WAAW,CAAEE,kBAAf,CAAD,CAAf,CACD,CAF2B,CAA5B,CAIAN,SAAS,CAAC,UAAM,CACdO,qBAAqB,CAACH,WAAD,SAACA,WAAD,UAACA,WAAD,CAAgB,EAAhB,CAArB,CACD,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,mBACE,sCACE,MAAC,GAAD,EACE,EAAE,CAAE,CACFK,YAAY,CAAE,CADZ,CAEFC,OAAO,CAAE,MAFP,CAGFC,aAAa,CAAE,QAHb,CAIFC,UAAU,CAAE,QAJV,CADN,wBAQE,KAAC,SAAD,EACE,KAAK,CAAC,cADR,CAEE,EAAE,CAAE,CAAEH,YAAY,CAAE,CAAhB,CAFN,CAGE,KAAK,CAAEH,kBAHT,CAIE,QAAQ,CAAE,kBAACO,KAAD,CAAW,CACnBN,qBAAqB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB,CACD,CANH,EARF,cAiBE,KAAC,aAAD,EACE,SAAS,cAAE,KAAC,QAAD,IADb,CAEE,OAAO,CAAEP,QAAQ,CAACQ,SAFpB,CAGE,OAAO,CAAC,UAHV,CAIE,SAAS,CAAE,KAJb,CAKE,OAAO,CAAE,kBAAM,CACbR,QAAQ,CAACS,WAAT,GACD,CAPH,oBAjBF,GADF,EADF,CAiCD,CApDM","sourcesContent":["import EditIcon from \"@mui/icons-material/Edit\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Box, TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"react-query\";\n\nexport const ProfileDisplayNameForm = ({\n  displayName,\n  onUpdate,\n}: {\n  displayName?: string;\n  onUpdate: ({ displayName }: { displayName?: string }) => Promise<void>;\n}) => {\n  const [runningDisplayName, setRunningDisplayName] = useState(\n    displayName ?? \"\"\n  );\n\n  const mutation = useMutation(() => {\n    return onUpdate({ displayName: runningDisplayName });\n  });\n\n  useEffect(() => {\n    setRunningDisplayName(displayName ?? \"\");\n  }, [displayName]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginBottom: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Display Name\"\n          sx={{ marginBottom: 1 }}\n          value={runningDisplayName}\n          onChange={(event) => {\n            setRunningDisplayName(event.target.value);\n          }}\n        />\n\n        <LoadingButton\n          startIcon={<EditIcon />}\n          loading={mutation.isLoading}\n          variant=\"outlined\"\n          fullWidth={false}\n          onClick={() => {\n            mutation.mutateAsync();\n          }}\n        >\n          Update\n        </LoadingButton>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}