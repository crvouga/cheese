{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"changeMonth\", \"components\", \"componentsProps\", \"date\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport PickersCalendarHeader from '../CalendarPicker/PickersCalendarHeader';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar onlyDayView = ['day'];\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewMobile(props) {\n  var changeMonth = props.changeMonth,\n      components = props.components,\n      componentsProps = props.componentsProps,\n      date = props.date,\n      leftArrowButtonText = props.leftArrowButtonText,\n      maxDateProp = props.maxDate,\n      minDateProp = props.minDate,\n      onChange = props.onChange,\n      _props$renderDay = props.renderDay,\n      _renderDay = _props$renderDay === void 0 ? function (_, dayProps) {\n    return /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dayProps));\n  } : _props$renderDay,\n      rightArrowButtonText = props.rightArrowButtonText,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var utils = useUtils();\n  var defaultDates = useDefaultDates();\n  var minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  var maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarHeader, _extends({\n      components: components,\n      componentsProps: componentsProps,\n      leftArrowButtonText: leftArrowButtonText,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: changeMonth,\n      openView: \"day\",\n      rightArrowButtonText: rightArrowButtonText,\n      views: onlyDayView\n    }, other)), /*#__PURE__*/_jsx(PickersCalendar, _extends({}, other, {\n      date: date,\n      onChange: onChange,\n      onFocusedDayChange: doNothing,\n      renderDay: function renderDay(day, _, DayProps) {\n        return _renderDay(day, _extends({\n          isPreviewing: false,\n          isStartOfPreviewing: false,\n          isEndOfPreviewing: false,\n          isHighlighting: isWithinRange(utils, day, date),\n          isStartOfHighlighting: isStartOfRange(utils, day, date),\n          isEndOfHighlighting: isEndOfRange(utils, day, date)\n        }, DayProps));\n      }\n    }))]\n  });\n}","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/node_modules/@mui/lab/DateRangePicker/DateRangePickerViewMobile.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PickersCalendarHeader","DateRangePickerDay","useDefaultDates","useUtils","PickersCalendar","isWithinRange","isStartOfRange","isEndOfRange","doNothing","jsx","_jsx","jsxs","_jsxs","onlyDayView","DateRangePickerViewMobile","props","changeMonth","components","componentsProps","date","leftArrowButtonText","maxDateProp","maxDate","minDateProp","minDate","onChange","renderDay","_","dayProps","rightArrowButtonText","other","utils","defaultDates","Fragment","children","onMonthChange","openView","views","onFocusedDayChange","day","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isStartOfHighlighting","isEndOfHighlighting"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeMonth\", \"components\", \"componentsProps\", \"date\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport PickersCalendarHeader from '../CalendarPicker/PickersCalendarHeader';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst onlyDayView = ['day'];\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewMobile(props) {\n  const {\n    changeMonth,\n    components,\n    componentsProps,\n    date,\n    leftArrowButtonText,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dayProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dayProps)),\n    rightArrowButtonText\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarHeader, _extends({\n      components: components,\n      componentsProps: componentsProps,\n      leftArrowButtonText: leftArrowButtonText,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: changeMonth,\n      openView: \"day\",\n      rightArrowButtonText: rightArrowButtonText,\n      views: onlyDayView\n    }, other)), /*#__PURE__*/_jsx(PickersCalendar, _extends({}, other, {\n      date: date,\n      onChange: onChange,\n      onFocusedDayChange: doNothing,\n      renderDay: (day, _, DayProps) => renderDay(day, _extends({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps))\n    }))]\n  });\n}"]},"metadata":{},"sourceType":"module"}