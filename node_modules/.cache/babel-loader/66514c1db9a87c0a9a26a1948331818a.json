{"ast":null,"code":"import _slicedToArray from \"/Users/christophervouga/Documents/projects/fake-id/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DateRangePickerViewDesktopRoot = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nvar DateRangePickerViewDesktopContainer = styled('div', {\n  skipSx: true\n})(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    '&:not(:last-of-type)': {\n      borderRight: \"2px solid \".concat(theme.palette.divider)\n    }\n  };\n});\nvar DateRangePickerViewDesktopCalendar = styled(PickersCalendar, {\n  skipSx: true\n})({\n  minWidth: 312,\n  minHeight: 288\n});\nvar DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher, {\n  skipSx: true\n})({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  var calendars = props.calendars,\n      changeMonth = props.changeMonth,\n      components = props.components,\n      componentsProps = props.componentsProps,\n      currentlySelectingRangeEnd = props.currentlySelectingRangeEnd,\n      currentMonth = props.currentMonth,\n      date = props.date,\n      disableFuture = props.disableFuture,\n      disablePast = props.disablePast,\n      _props$leftArrowButto = props.leftArrowButtonText,\n      leftArrowButtonText = _props$leftArrowButto === void 0 ? 'Previous month' : _props$leftArrowButto,\n      maxDateProp = props.maxDate,\n      minDateProp = props.minDate,\n      onChange = props.onChange,\n      _props$renderDay = props.renderDay,\n      _renderDay = _props$renderDay === void 0 ? function (_, dateRangeProps) {\n    return /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps));\n  } : _props$renderDay,\n      _props$rightArrowButt = props.rightArrowButtonText,\n      rightArrowButtonText = _props$rightArrowButt === void 0 ? 'Next month' : _props$rightArrowButt,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var utils = useUtils();\n  var defaultDates = useDefaultDates();\n  var minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  var maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rangePreviewDay = _React$useState2[0],\n      setRangePreviewDay = _React$useState2[1];\n\n  var isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture: disableFuture,\n    maxDate: maxDate\n  });\n  var isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast: disablePast,\n    minDate: minDate\n  });\n  var previewingRange = calculateRangePreview({\n    utils: utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd: currentlySelectingRangeEnd\n  });\n  var handleDayChange = React.useCallback(function (day) {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  var handlePreviewDayChange = function handlePreviewDayChange(newPreviewRequest) {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  var CalendarTransitionProps = React.useMemo(function () {\n    return {\n      onMouseLeave: function onMouseLeave() {\n        return setRangePreviewDay(null);\n      }\n    };\n  }, []);\n  var selectNextMonth = React.useCallback(function () {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  var selectPreviousMonth = React.useCallback(function () {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map(function (_, index) {\n      var monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: function renderDay(day, __, DayProps) {\n            return _renderDay(day, _extends({\n              isPreviewing: isWithinRange(utils, day, previewingRange),\n              isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n              isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n              isHighlighting: isWithinRange(utils, day, date),\n              isStartOfHighlighting: isStartOfRange(utils, day, date),\n              isEndOfHighlighting: isEndOfRange(utils, day, date),\n              onMouseEnter: function onMouseEnter() {\n                return handlePreviewDayChange(day);\n              }\n            }, DayProps));\n          }\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/node_modules/@mui/lab/DateRangePicker/DateRangePickerViewDesktop.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","styled","useDefaultDates","useUtils","calculateRangePreview","PickersCalendar","DateRangePickerDay","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","isWithinRange","isStartOfRange","isEndOfRange","doNothing","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","DateRangePickerViewDesktopRoot","skipSx","display","flexDirection","DateRangePickerViewDesktopContainer","theme","borderRight","palette","divider","DateRangePickerViewDesktopCalendar","minWidth","minHeight","DateRangePickerViewDesktopArrowSwitcher","padding","alignItems","justifyContent","getCalendarsArray","calendars","Array","fill","DateRangePickerViewDesktop","props","changeMonth","components","componentsProps","currentlySelectingRangeEnd","currentMonth","date","disableFuture","disablePast","leftArrowButtonText","maxDateProp","maxDate","minDateProp","minDate","onChange","renderDay","_","dateRangeProps","rightArrowButtonText","other","utils","defaultDates","useState","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","isPreviousMonthDisabled","previewingRange","range","newDate","handleDayChange","useCallback","day","handlePreviewDayChange","newPreviewRequest","CalendarTransitionProps","useMemo","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","children","map","index","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","key","onFocusedDayChange","TransitionProps","__","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isStartOfHighlighting","isEndOfHighlighting","onMouseEnter"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DateRangePickerViewDesktopRoot = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div', {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `2px solid ${theme.palette.divider}`\n  }\n}));\nconst DateRangePickerViewDesktopCalendar = styled(PickersCalendar, {\n  skipSx: true\n})({\n  minWidth: 312,\n  minHeight: 288\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher, {\n  skipSx: true\n})({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default DateRangePickerViewDesktop;"]},"metadata":{},"sourceType":"module"}