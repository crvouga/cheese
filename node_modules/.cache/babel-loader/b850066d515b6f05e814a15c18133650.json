{"ast":null,"code":"var _jsxFileName = \"/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfilePictureForm.tsx\",\n    _s = $RefreshSig$();\n\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Box } from \"@mui/material\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useAuthUser, useProfile } from \"../data-access\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProfilePictureForm = () => {\n  _s();\n\n  const {\n    userId\n  } = useAuthUser();\n  const {\n    profile,\n    updateProfilePicture\n  } = useProfile({\n    userId\n  });\n  const [state, setState] = useState(\"idle\");\n  const onDrop = useCallback(async acceptedFiles => {\n    const [profilePictureFile] = acceptedFiles;\n\n    if (profilePictureFile) {\n      setState(\"loading\");\n      await updateProfilePicture({\n        profilePictureFile\n      });\n      setState(\"idle\");\n    }\n  }, [updateProfilePicture]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginBottom: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: \"132px\",\n            height: \"132px\",\n            marginBottom: 1\n          },\n          variant: \"rounded\",\n          src: profile === null || profile === void 0 ? void 0 : profile.profilePictureUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: false,\n          startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, this),\n          variant: \"outlined\",\n          loading: state === \"loading\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfilePictureForm, \"912RQEtKxToXFSFQTP6pNsdWvLw=\", false, function () {\n  return [useAuthUser, useProfile, useDropzone];\n});\n\n_c = ProfilePictureForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePictureForm\");","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/pages/ProfilePictureForm.tsx"],"names":["UploadIcon","LoadingButton","Avatar","Box","React","useCallback","useState","useDropzone","useAuthUser","useProfile","ProfilePictureForm","userId","profile","updateProfilePicture","state","setState","onDrop","acceptedFiles","profilePictureFile","getRootProps","getInputProps","marginBottom","display","flexDirection","alignItems","width","height","profilePictureUrl"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,eAA5B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAaH,WAAW,EAA9B;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoCJ,UAAU,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAApD;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAqB,MAArB,CAAlC;AAEA,QAAMU,MAAM,GAAGX,WAAW,CACxB,MAAOY,aAAP,IAAyB;AACvB,UAAM,CAACC,kBAAD,IAAuBD,aAA7B;;AACA,QAAIC,kBAAJ,EAAwB;AACtBH,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACA,YAAMF,oBAAoB,CAAC;AAAEK,QAAAA;AAAF,OAAD,CAA1B;AACAH,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD;AACF,GARuB,EASxB,CAACF,oBAAD,CATwB,CAA1B;AAYA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCb,WAAW,CAAC;AAClDS,IAAAA;AADkD,GAAD,CAAnD;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFK,QAAAA,YAAY,EAAE,CADZ;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,aAAa,EAAE,QAHb;AAIFC,QAAAA,UAAU,EAAE;AAJV,OADN;AAAA,6BAQE,oBAASL,YAAY,EAArB;AAAA,gCACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE;AACFK,YAAAA,KAAK,EAAE,OADL;AAEFC,YAAAA,MAAM,EAAE,OAFN;AAGFL,YAAAA,YAAY,EAAE;AAHZ,WADN;AAME,UAAA,OAAO,EAAC,SANV;AAOE,UAAA,GAAG,EAAET,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEe;AAPhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,aAAD;AACE,UAAA,SAAS,EAAE,KADb;AAEE,UAAA,SAAS,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAFb;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,OAAO,EAAEb,KAAK,KAAK,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiCD,CAvDM;;GAAMJ,kB;UACQF,W,EACuBC,U,EAgBFF,W;;;KAlB7BG,kB","sourcesContent":["import UploadIcon from \"@mui/icons-material/Upload\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Box } from \"@mui/material\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useAuthUser, useProfile } from \"../data-access\";\n\nexport const ProfilePictureForm = () => {\n  const { userId } = useAuthUser();\n  const { profile, updateProfilePicture } = useProfile({ userId });\n\n  const [state, setState] = useState<\"idle\" | \"loading\">(\"idle\");\n\n  const onDrop = useCallback(\n    async (acceptedFiles) => {\n      const [profilePictureFile] = acceptedFiles;\n      if (profilePictureFile) {\n        setState(\"loading\");\n        await updateProfilePicture({ profilePictureFile });\n        setState(\"idle\");\n      }\n    },\n    [updateProfilePicture]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          marginBottom: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Avatar\n            sx={{\n              width: \"132px\",\n              height: \"132px\",\n              marginBottom: 1,\n            }}\n            variant=\"rounded\"\n            src={profile?.profilePictureUrl}\n          />\n          <LoadingButton\n            fullWidth={false}\n            startIcon={<UploadIcon />}\n            variant=\"outlined\"\n            loading={state === \"loading\"}\n          >\n            Upload\n          </LoadingButton>\n        </div>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}