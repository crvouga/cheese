{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { updateDoc, doc, onSnapshot } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { useEffect } from \"react\";\nimport create from \"zustand\";\nimport { generateId } from \"../utils\";\nimport { firestore, storage } from \"./firebase\";\nconst useStore = create(set => ({\n  setProfile: profile => set({\n    profile\n  })\n}));\nexport const useProfile = ({\n  userId\n}) => {\n  _s();\n\n  const {\n    profile,\n    setProfile\n  } = useStore();\n  useEffect(() => {\n    return onSnapshot(doc(firestore, \"profiles\", userId), doc => {\n      const profile = doc.data();\n      setProfile(profile);\n    });\n  }, [userId, setProfile]);\n  const profileDocRef = doc(firestore, \"profiles\", userId);\n\n  const updateProfilePicture = async ({\n    profilePictureFile\n  }) => {\n    const storageRef = ref(storage, `profilePictures/${generateId()}`);\n    await uploadBytes(storageRef, profilePictureFile);\n    const downloadUrl = await getDownloadURL(storageRef);\n    await updateDoc(profileDocRef, {\n      profilePictureUrl: downloadUrl\n    });\n  };\n\n  const updateDisplayName = async ({\n    displayName\n  }) => {\n    await updateDoc(profileDocRef, {\n      displayName\n    });\n  };\n\n  return {\n    profile,\n    updateProfilePicture,\n    updateDisplayName\n  };\n};\n\n_s(useProfile, \"xyyd5sA9q1M6QRBFRGPpqQqIzYY=\", false, function () {\n  return [useStore];\n});","map":{"version":3,"sources":["/Users/christophervouga/Documents/projects/fake-id/src/data-access/profile.ts"],"names":["updateDoc","doc","onSnapshot","getDownloadURL","ref","uploadBytes","useEffect","create","generateId","firestore","storage","useStore","set","setProfile","profile","useProfile","userId","data","profileDocRef","updateProfilePicture","profilePictureFile","storageRef","downloadUrl","profilePictureUrl","updateDisplayName","displayName"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,UAAzB,QAAmD,oBAAnD;AACA,SAASC,cAAT,EAAyBC,GAAzB,EAA8BC,WAA9B,QAAiD,kBAAjD;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;AAaA,MAAMC,QAAQ,GAAGJ,MAAM,CAAUK,GAAD,KAAU;AACxCC,EAAAA,UAAU,EAAGC,OAAD,IAAaF,GAAG,CAAC;AAAEE,IAAAA;AAAF,GAAD;AADY,CAAV,CAAT,CAAvB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AAAA;;AAC5D,QAAM;AAAEF,IAAAA,OAAF;AAAWD,IAAAA;AAAX,MAA0BF,QAAQ,EAAxC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOJ,UAAU,CAACD,GAAG,CAACQ,SAAD,EAAY,UAAZ,EAAwBO,MAAxB,CAAJ,EAAsCf,GAAD,IAAS;AAC7D,YAAMa,OAAO,GAAGb,GAAG,CAACgB,IAAJ,EAAhB;AACAJ,MAAAA,UAAU,CAACC,OAAD,CAAV;AACD,KAHgB,CAAjB;AAID,GALQ,EAKN,CAACE,MAAD,EAASH,UAAT,CALM,CAAT;AAOA,QAAMK,aAAa,GAAGjB,GAAG,CAACQ,SAAD,EAAY,UAAZ,EAAwBO,MAAxB,CAAzB;;AAEA,QAAMG,oBAAoB,GAAG,OAAO;AAClCC,IAAAA;AADkC,GAAP,KAIvB;AACJ,UAAMC,UAAU,GAAGjB,GAAG,CAACM,OAAD,EAAW,mBAAkBF,UAAU,EAAG,EAA1C,CAAtB;AAEA,UAAMH,WAAW,CAACgB,UAAD,EAAaD,kBAAb,CAAjB;AAEA,UAAME,WAAW,GAAG,MAAMnB,cAAc,CAACkB,UAAD,CAAxC;AAEA,UAAMrB,SAAS,CAACkB,aAAD,EAAgB;AAC7BK,MAAAA,iBAAiB,EAAED;AADU,KAAhB,CAAf;AAGD,GAdD;;AAgBA,QAAME,iBAAiB,GAAG,OAAO;AAC/BC,IAAAA;AAD+B,GAAP,KAIpB;AACJ,UAAMzB,SAAS,CAACkB,aAAD,EAAgB;AAC7BO,MAAAA;AAD6B,KAAhB,CAAf;AAGD,GARD;;AAUA,SAAO;AACLX,IAAAA,OADK;AAELK,IAAAA,oBAFK;AAGLK,IAAAA;AAHK,GAAP;AAKD,CA3CM;;GAAMT,U;UACqBJ,Q","sourcesContent":["import { updateDoc, doc, onSnapshot, setDoc } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { useEffect } from \"react\";\nimport create from \"zustand\";\nimport { generateId } from \"../utils\";\nimport { firestore, storage } from \"./firebase\";\n\ntype IProfile = {\n  userId: string;\n  displayName?: string;\n  profilePictureUrl?: string;\n};\n\ntype IStore = {\n  profile?: Partial<IProfile>;\n  setProfile: (profile?: IProfile) => void;\n};\n\nconst useStore = create<IStore>((set) => ({\n  setProfile: (profile) => set({ profile }),\n}));\n\nexport const useProfile = ({ userId }: { userId: string }) => {\n  const { profile, setProfile } = useStore();\n\n  useEffect(() => {\n    return onSnapshot(doc(firestore, \"profiles\", userId), (doc) => {\n      const profile = doc.data() as IProfile | undefined;\n      setProfile(profile);\n    });\n  }, [userId, setProfile]);\n\n  const profileDocRef = doc(firestore, \"profiles\", userId);\n\n  const updateProfilePicture = async ({\n    profilePictureFile,\n  }: {\n    profilePictureFile: File;\n  }) => {\n    const storageRef = ref(storage, `profilePictures/${generateId()}`);\n\n    await uploadBytes(storageRef, profilePictureFile);\n\n    const downloadUrl = await getDownloadURL(storageRef);\n\n    await updateDoc(profileDocRef, {\n      profilePictureUrl: downloadUrl,\n    });\n  };\n\n  const updateDisplayName = async ({\n    displayName,\n  }: {\n    displayName: string;\n  }) => {\n    await updateDoc(profileDocRef, {\n      displayName,\n    });\n  };\n\n  return {\n    profile,\n    updateProfilePicture,\n    updateDisplayName,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}